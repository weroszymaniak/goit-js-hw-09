{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,SAASO,GAAUR,SAAEA,EAAQC,MAAEA,IAC7B,OAAOJ,EAAAY,OAAOC,QAAQ,uBAAqBV,QAAiBC,M,CAG9D,SAASU,GAASX,SAAEA,EAAQC,MAAEA,IAC5B,OAAOJ,EAAAY,OAAOG,QAAQ,sBAAoBZ,QAAeC,M,CApB5CY,SAASC,cAAc,SAmC/BC,iBAAiB,UAZxB,SAAkBC,GAChBA,EAAMC,iBACN,IAAIC,EAAOC,OAAOH,EAAMI,cAAcF,KAAKG,OACvCpB,EAAQkB,OAAOH,EAAMI,cAAcnB,MAAMoB,OACzCC,EAASH,OAAOH,EAAMI,cAAcE,OAAOD,OAE/C,IAAK,IAAIE,EAAI,EAAGA,GAAKD,EAAQC,IAC3BxB,EAAcwB,EAAGtB,GAAOuB,KAAKhB,GAAWiB,MAAMd,GAC9CV,GAASiB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onResolve({ position, delay }) {\n  return Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onReject({ position, delay }) {\n  return Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let step = Number(event.currentTarget.step.value);\n  let delay = Number(event.currentTarget.delay.value);\n  let amount = Number(event.currentTarget.amount.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay).then(onResolve).catch(onReject);\n    delay += step;\n  }\n}\n\nformEl.addEventListener('submit', onSubmit);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$onResolve","Notify","success","$47d4ff9957288465$var$onReject","failure","document","querySelector","addEventListener","event","preventDefault","step","Number","currentTarget","value","amount","i","then","catch"],"version":3,"file":"03-promises.b1d9c005.js.map"}